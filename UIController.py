# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
import threading
from datetime import timedelta
from operator import truediv
from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
from governer import *
from multiprocessing import Process

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"/Agrigen/frame0")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

i = -1

window = Tk()

window.geometry("1920x1080")
window.configure(bg = "#A3D69D")


canvas = Canvas(
    window,
    bg = "#A3D69D",
    height = 1080,
    width = 1920,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    455.0,
    117.50006103515625,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    274.0,
    334.50006103515625,
    image=image_image_2
)

canvas.create_text(
    95.99993896484375,
    52.80010986328125,
    anchor="nw",
    text="Good Evening, Sahil",
    fill="#2E2E2E",
    font=("Roboto Regular", 72 * -1)
)

canvas.create_text(
    233.0,
    246.50006103515625,
    anchor="nw",
    text="LETTUCE",
    fill="#2E2E2E",
    font=("Montserrat Bold", 32 * -1)
)

canvas.create_text(
    233.0,
    311.50006103515625,
    anchor="nw",
    text="PLANT CONDITION:",
    fill="#2E2E2E",
    font=("Roboto Regular", 22 * -1)
)

plant_health_text = canvas.create_text(
    233.0,
    334.50006103515625,
    anchor="nw",
    text="OPTIMAL",
    fill="#27BB1A",
    font=("Montserrat Bold", 32)
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    730.0,
    337.50006103515625,
    image=image_image_3
)

canvas.create_text(
    649.0,
    249.50006103515625,
    anchor="nw",
    text="SOLAR PANEL",
    fill="#2E2E2E",
    font=("Montserrat Bold", 32 * -1)
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    1420.0,
    403.50006103515625,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    274.0,
    808.5000610351562,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    730.0,
    808.5000610351562,
    image=image_image_6
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    1186.0,
    808.5000610351562,
    image=image_image_7
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    1642.0,
    808.5000610351562,
    image=image_image_8
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    150.0,
    353.50006103515625,
    image=image_image_9
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    589.0,
    353.50006103515625,
    image=image_image_10
)

canvas.create_text(
    649.0,
    334.50006103515625,
    anchor="nw",
    text="2 KW OUTPUT",
    fill="#3769B3",
    font=("Montserrat Bold", 32 * -1)
)

canvas.create_text(
    1306.0,
    246.50006103515625,
    anchor="nw",
    text="ALERTS",
    fill="#2F2F2F",
    font=("Montserrat Bold", 48 * -1)
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    background=window["background"],
    command=lambda: print("button_1 clicked"),
    relief="flat"
)
button_1.place(
    x=1718.0,
    y=58.50006103515625,
    width=120.0,
    height=120.0
)

canvas.create_text(
    147.0,
    625.5000610351562,
    anchor="nw",
    text="TEMPERATURE",
    fill="#2F2F2F",
    font=("Montserrat Bold", 32 * -1)
)

canvas.create_text(
    645.0,
    625.5000610351562,
    anchor="nw",
    text="HUMIDITY",
    fill="#2F2F2F",
    font=("Montserrat Bold", 32 * -1)
)

canvas.create_text(
    1106.0,
    625.5000610351562,
    anchor="nw",
    text="pH LEVEL",
    fill="#2F2F2F",
    font=("Montserrat Bold", 32 * -1)
)

canvas.create_text(
    1562.0,
    625.5000610351562,
    anchor="nw",
    text="EC LEVEL",
    fill="#2F2F2F",
    font=("Montserrat Bold", 32 * -1)
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    730.0,
    828.5000610351562,
    image=image_image_11
)

image_image_12 = PhotoImage(
    file=relative_to_assets("image_12.png"))
image_12 = canvas.create_image(
    274.0,
    828.5000610351562,
    image=image_image_12
)

image_image_13 = PhotoImage(
    file=relative_to_assets("image_13.png"))
image_13 = canvas.create_image(
    1186.0,
    828.5000610351562,
    image=image_image_13
)

image_image_14 = PhotoImage(
    file=relative_to_assets("image_14.png"))
image_14 = canvas.create_image(
    1642.0,
    828.5000610351562,
    image=image_image_14
)

image_image_15 = PhotoImage(
    file=relative_to_assets("image_15.png"))
image_15 = canvas.create_image(
    274.0,
    827.5000610351562,
    image=image_image_15
)

image_image_16 = PhotoImage(
    file=relative_to_assets("image_16.png"))
image_16 = canvas.create_image(
    730.0,
    827.5000610351562,
    image=image_image_16
)

image_image_17 = PhotoImage(
    file=relative_to_assets("image_17.png"))
image_17 = canvas.create_image(
    1186.0,
    827.5000610351562,
    image=image_image_17
)

image_image_18 = PhotoImage(
    file=relative_to_assets("image_18.png"))
image_18 = canvas.create_image(
    1642.0,
    827.5000610351562,
    image=image_image_18
)

temp_text = canvas.create_text(
    239.0,
    840.5000610351562,
    anchor="nw",
    text="122 F",
    fill="#27BB1A",
    font=("Montserrat Bold", 32 * -1)
)

hum_text = canvas.create_text(
    707.0,
    840.5000610351562,
    anchor="nw",
    text="96%",
    fill="#27BB1A",
    font=("Montserrat Bold", 32 * -1)
)

ph_text = canvas.create_text(
    1159.0,
    840.5000610351562,
    anchor="nw",
    text="6.5",
    fill="#27BB1A",
    font=("Montserrat Bold", 32 * -1)
)

ec_text = canvas.create_text(
    1613.0,
    840.5000610351562,
    anchor="nw",
    text="0.12",
    fill="#27BB1A",
    font=("Montserrat Bold", 32 * -1)
)

image_image_19 = PhotoImage(
    file=relative_to_assets("image_19.png"))
image_19 = canvas.create_image(
    730.0,
    793.5000610351562,
    image=image_image_19
)

image_image_20 = PhotoImage(
    file=relative_to_assets("image_20.png"))
image_20 = canvas.create_image(
    1646.0,
    792.5000610351562,
    image=image_image_20
)

image_image_21 = PhotoImage(
    file=relative_to_assets("image_21.png"))
image_21 = canvas.create_image(
    274.0,
    792.5000610351562,
    image=image_image_21
)

image_image_22 = PhotoImage(
    file=relative_to_assets("image_22.png"))
image_22 = canvas.create_image(
    1191.0,
    793.5000610351562,
    image=image_image_22
)

def set_temperature(temp: str, color: Color):
    canvas.itemconfig(temp_text, text=f"{temp} F")
    if color == Color.Red:
        col = Color.Red.value
    else:
        col = Color.Green.value
    canvas.itemconfig(temp_text, fill=col)

def set_humidity(humidity: str, color: Color):
    canvas.itemconfig(hum_text, text=f"{humidity}%")
    if color == Color.Red:
        col = Color.Red.value
    else:
        col = Color.Green.value
    canvas.itemconfig(hum_text, fill=col)

def set_phlevel(ph: str, color: Color):
    canvas.itemconfig(ph_text, text=ph)
    if color == Color.Red:
        col = Color.Red.value
    else:
        col = Color.Green.value
    canvas.itemconfig(ph_text, fill=col)

def set_eclevel(ec: str, color: Color):
    canvas.itemconfig(ec_text, text=ec)
    if color == Color.Red:
        col = Color.Red.value
    else:
        col = Color.Green.value
    canvas.itemconfig(ec_text, fill=col)

def plant_health(temp_color: Color, hum_color: Color, ph_color: Color, ec_color: Color):
    count = 0
    if temp_color == Color.Red:
        count += 1
    if hum_color == Color.Red:
        count += 1
    if ph_color == Color.Red:
        count += 1
    if ec_color == Color.Red:
        count += 1

    if(count >= 1):
        canvas.itemconfig(plant_health_text, text="IMPROPER", fill=Color.Red.value)
    else:
        canvas.itemconfig(plant_health_text, text="OPTIMAL", fill=Color.Green.value)

window.resizable(False, False)

def background_task():
    global i
    i = i + 1
    control_loop_with_plant_data("lettuce", i)
    temp, hum, ph, ec = get_textinfo()
    temp_color, hum_color, ph_color, ec_color = get_colorinfo()
    set_temperature(temp, temp_color)
    set_humidity(hum, hum_color)
    set_phlevel(ph, ph_color)
    set_eclevel(ec, ec_color)
    plant_health(temp_color, hum_color, ph_color, ec_color)
    window.after(3000, background_task)

background_task()

window.mainloop()
